{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, Table, ListGroupItem, ButtonGroup, Badge } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.state = {\n      checked: false,\n      clicked_id: [],\n      songsForPlaylist: [],\n      isloaded: false,\n      playlistsToBeAdded: [],\n      allPlaylist: [],\n      newPlaylist: \"\"\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickNew = _this.handleClickNew.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        newPlaylist: event.target.value\n      });\n    }\n  }, {\n    key: \"getAllplaylists\",\n    value: function getAllplaylists() {\n      var _this2 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/userplaylists/12345').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isloaded: true,\n          allPlaylist: json\n        });\n      });\n    }\n  }, {\n    key: \"addnewPlaylist\",\n    value: function addnewPlaylist(nameobj) {\n      var _this3 = this;\n\n      var user = 12345;\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/playlist/' + user + '/' + nameobj.name).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this3.setState({});\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      // console.error(\"fetch\")\n      this.getAllplaylists();\n    }\n  }, {\n    key: \"handleClickNew\",\n    value: function handleClickNew() {\n      var nameobj = {\n        \"name\": this.state.newPlaylist\n      };\n      this.addnewPlaylist(nameobj);\n      this.getAllplaylists();\n      console.error(nameobj);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isloaded = _this$state.isloaded,\n          allPlaylist = _this$state.allPlaylist;\n      return React.createElement(Form, {\n        class: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Create a Playlist\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"Playlist\",\n        id: \"exampleEmail\",\n        placeholder: \"Enter playlist Name...\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClickNew,\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Add New Playlist\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Songs Added\"), React.createElement(\"li\", {\n        key: this.clicked_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClick,\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Get All playlists\"), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Date Created\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"User ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Playlist Name\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, allPlaylist.map(function (result) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, result.playlistID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, result.dataCreated, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, result.userID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, result.playlistName));\n      }))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","Table","ListGroupItem","ButtonGroup","Badge","Example","props","state","checked","clicked_id","songsForPlaylist","isloaded","playlistsToBeAdded","allPlaylist","newPlaylist","handleClick","bind","handleClickNew","handleChange","event","setState","target","value","fetch","then","res","json","nameobj","user","name","getAllplaylists","addnewPlaylist","console","error","map","result","playlistID","dataCreated","userID","playlistName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, Table, ListGroupItem, ButtonGroup,  Badge } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  \n \n  constructor (props){\n    super(props);\n\n    this.state={\n      checked: false,\n      clicked_id: [],\n      songsForPlaylist: [],\n      isloaded: false,\n      playlistsToBeAdded: [],\n      allPlaylist:[],\n      \n      newPlaylist: \"\",\n    };\n    \n    this.handleClick= this.handleClick.bind(this);\n    this.handleClickNew= this.handleClickNew.bind(this);\n    this.handleChange= this.handleChange.bind(this);\n  }\n\n  \n  handleChange(event) {\n    this.setState({newPlaylist: event.target.value});\n    }\n \n  getAllplaylists(){\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/userplaylists/12345')\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isloaded: true,\n        allPlaylist: json,\n      })\n    });\n  }\n  \n   addnewPlaylist(nameobj){\n     let user=12345;\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/playlist/'+user +'/'+nameobj.name)\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({})\n    });\n  }\n  \n  \n  \n  \n  \n  handleClick(){\n   // console.error(\"fetch\")\n    this.getAllplaylists()\n  }\n  \n  handleClickNew(){\n    var nameobj= {\"name\": this.state.newPlaylist};\n    this.addnewPlaylist(nameobj);\n    this.getAllplaylists();\n   console.error(nameobj);\n   \n  }\n  render() {\n   \n    var{isloaded, allPlaylist}= this.state;\n  \n    return (\n          \n      <Form class=\"2\">\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <h3 for=\"Playlist\">Create a Playlist</h3>\n              <Input type=\"text\" name=\"Playlist\" id=\"exampleEmail\" placeholder=\"Enter playlist Name...\" \n                 value={this.state.value}\n                  onChange={this.handleChange}/>\n              <Button  onClick= {this.handleClickNew} id=\"createPlaylist\">Add New Playlist</Button>\n\n\n            </FormGroup>\n          </Col>\n        </Row>\n        \n        <br></br>\n        <h3>Songs Added</h3>\n          <li key={this.clicked_id}></li>\n        <br></br>\n        <Button  onClick= {this.handleClick} id=\"createPlaylist\">Get All playlists</Button>\n      \n          \n          \n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Date Created</th>\n            <th>User ID</th>\n            <th>Playlist Name</th>\n          </tr>\n        </thead>\n        <tbody>\n        {allPlaylist.map(result => (\n        <tr>\n          <td>{result.playlistID}</td>\n          <td>{result.dataCreated} </td>\n          <td>{result.userID}</td>\n          <td>{result.playlistName}</td>\n        </tr>\n        ))}\n        </tbody>\n        </Table>\n          \n  </Form>\n  \n    );\n    \n    \n   \n\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}