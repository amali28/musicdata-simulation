{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, Table, ListGroupItem, ButtonGroup, Badge } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n\n    _this.onClick = function (event) {\n      var id = event.currentTarget.getAttribute(\"songForPlaylist-rowid\");\n      console.error(id);\n    };\n\n    _this.state = {\n      checked: false,\n      clicked_id: [],\n      songsForPlaylist: [],\n      isloaded: false,\n      isButtonDisabled: false,\n      playlistsToBeAdded: [],\n      allPlaylist: []\n    };\n    return _this;\n  } // componentDidMount(){\n  //   fetch('https://se3309-final-project-amali28.c9users.io:8081/retrievePlaylistSongs')\n  //   .then(res=> res.json())\n  //   .then(json => {\n  // this.setState({\n  //       isloaded: true,\n  //       songsForPlaylist: json,\n  //     })\n  //   });\n  // }\n\n\n  _createClass(Example, [{\n    key: \"component2\",\n    value: function component2() {\n      var _this2 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/userplaylists/12345').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isloaded: true,\n          allPlaylist: json\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(songID) {\n      console.error(\"Youuuu\");\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      console.error(\"fetch\");\n      this.component2();\n    }\n  }, {\n    key: \"disableButton\",\n    value: function disableButton() {\n      this.setState({\n        isButtonDisabled: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isloaded = _this$state.isloaded,\n          songsForPlaylist = _this$state.songsForPlaylist;\n      var _this$state2 = this.state,\n          isloaded = _this$state2.isloaded,\n          allPlaylist = _this$state2.allPlaylist;\n      return React.createElement(Form, {\n        class: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Create a Playlist\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"Playlist\",\n        id: \"exampleEmail\",\n        placeholder: \"Enter playlist name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Songs Added\"), React.createElement(\"li\", {\n        key: this.clicked_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClick,\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Create\"), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Date Created\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"User ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Playlist Name\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, allPlaylist.map(function (result) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, result.playlistID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, result.dataCreated, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, result.userID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, result.playlistName));\n      }))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","Table","ListGroupItem","ButtonGroup","Badge","Example","props","onClick","event","id","currentTarget","getAttribute","console","error","state","checked","clicked_id","songsForPlaylist","isloaded","isButtonDisabled","playlistsToBeAdded","allPlaylist","fetch","then","res","json","setState","songID","component2","handleClick","map","result","playlistID","dataCreated","userID","playlistName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, Table, ListGroupItem, ButtonGroup,  Badge } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  \n \n  constructor (props){\n    super(props);\n\n    this.state={\n      checked: false,\n      clicked_id: [],\n      songsForPlaylist: [],\n      isloaded: false,\n      isButtonDisabled: false,\n      playlistsToBeAdded: [],\n      allPlaylist:[],\n    };\n    \n\n  }\n  \n  // componentDidMount(){\n  //   fetch('https://se3309-final-project-amali28.c9users.io:8081/retrievePlaylistSongs')\n  //   .then(res=> res.json())\n  //   .then(json => {\n  // this.setState({\n  //       isloaded: true,\n  //       songsForPlaylist: json,\n  //     })\n  //   });\n  // }\n  \n  component2(){\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/userplaylists/12345')\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isloaded: true,\n        allPlaylist: json,\n      })\n    });\n  }\n  \n  \n  \n  \n  \n  \n   handleClick(songID){\n  \n    console.error(\"Youuuu\");\n\n   \n  }\n  \n  onClick = event => {\n  const id = event.currentTarget.getAttribute(\"songForPlaylist-rowid\");\n  console.error(id);\n   \n  };\n  \n  handleClick(){\n    console.error(\"fetch\")\n    this.component2();\n  }\n  \n  disableButton() {\n    this.setState({\n        isButtonDisabled: true\n     });\n  }\n  \n  render() {\n    var{isloaded, songsForPlaylist} = this.state;\n    var{isloaded, allPlaylist}= this.state;\n  \n    return (\n          \n      <Form class=\"2\">\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <h3 for=\"Playlist\">Create a Playlist</h3>\n              <Input type=\"text\" name=\"Playlist\" id=\"exampleEmail\" placeholder=\"Enter playlist name...\" />\n            </FormGroup>\n          </Col>\n        </Row>\n        \n        <br></br>\n        <h3>Songs Added</h3>\n          <li key={this.clicked_id}></li>\n        <br></br>\n        <Button  onClick= {this.handleClick} id=\"createPlaylist\">Create</Button>\n      \n          \n          \n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Date Created</th>\n            <th>User ID</th>\n            <th>Playlist Name</th>\n          </tr>\n        </thead>\n        <tbody>\n        {allPlaylist.map(result => (\n        <tr>\n          <td>{result.playlistID}</td>\n          <td>{result.dataCreated} </td>\n          <td>{result.userID}</td>\n          <td>{result.playlistName}</td>\n        </tr>\n        ))}\n        </tbody>\n        </Table>\n          \n          </Form>\n  \n    );\n    \n    \n   \n\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}