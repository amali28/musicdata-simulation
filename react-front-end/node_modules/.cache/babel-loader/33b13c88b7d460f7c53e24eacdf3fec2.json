{"ast":null,"code":"import _toConsumableArray from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem, ButtonGroup, Badge } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n\n    _this.onClick = function (event) {\n      var id = event.currentTarget.getAttribute(\"songForPlaylist-rowid\");\n      console.error(id); // this.setState({ clicked_id: id });\n      // console.error(this.state.clicked_id);\n    };\n\n    _this.state = {\n      checked: false,\n      clicked_id: [],\n      songsForPlaylist: [],\n      isloaded: false,\n      isButtonDisabled: false,\n      playlistsToBeAdded: []\n    };\n    _this.onCheckboxBtnClick = _this.onCheckboxBtnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/retrievePlaylistSongs').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isloaded: true,\n          songsForPlaylist: json\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(songID) {\n      this.playlistsToBeAdded.push(songID);\n      console.error(this.playlistsToBeAdded);\n    }\n  }, {\n    key: \"onCheckboxBtnClick\",\n    value: function onCheckboxBtnClick(selected) {\n      var index = this.state.cSelected.indexOf(selected);\n\n      if (index < 0) {\n        this.state.cSelected.push(selected);\n      } else {\n        this.state.cSelected.splice(index, 1);\n      }\n\n      this.setState({\n        cSelected: _toConsumableArray(this.state.cSelected)\n      });\n    }\n  }, {\n    key: \"disableButton\",\n    value: function disableButton() {\n      this.setState({\n        isButtonDisabled: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          isloaded = _this$state.isloaded,\n          songsForPlaylist = _this$state.songsForPlaylist;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Create a Playlist\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"Playlist\",\n        id: \"exampleEmail\",\n        placeholder: \"Enter playlist name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })))), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, songsForPlaylist.map(function (songs) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          disabled: _this3.state.isButtonDisabled,\n          key: songs.songID,\n          \"songsForPlaylist-rowid\": songs.songID,\n          onClick: _this3.handleClick(songs.songID),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, songs.songName, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, songs.songID, \" \"));\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Songs Added\"), React.createElement(\"li\", {\n        key: this.clicked_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Create\"));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","ListGroupItem","ButtonGroup","Badge","Example","props","onClick","event","id","currentTarget","getAttribute","console","error","state","checked","clicked_id","songsForPlaylist","isloaded","isButtonDisabled","playlistsToBeAdded","onCheckboxBtnClick","bind","fetch","then","res","json","setState","songID","push","selected","index","cSelected","indexOf","splice","map","songs","handleClick","songName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem, ButtonGroup,  Badge } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  \n \n  constructor (props){\n    super(props);\n\n    this.state={\n      checked: false,\n      clicked_id: [],\n      songsForPlaylist: [],\n      isloaded: false,\n      isButtonDisabled: false,\n      playlistsToBeAdded: [],\n    };\n    \n  this.onCheckboxBtnClick = this.onCheckboxBtnClick.bind(this);\n\n  }\n  \n  componentDidMount(){\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/retrievePlaylistSongs')\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isloaded: true,\n        songsForPlaylist: json,\n      })\n    });\n  }\n  \n   handleClick(songID){\n    \n    this.playlistsToBeAdded.push(songID);\n    console.error(this.playlistsToBeAdded);\n    \n\n   \n  }\n  \n  onClick = event => {\n  const id = event.currentTarget.getAttribute(\"songForPlaylist-rowid\");\n   console.error(id);\n   \n   // this.setState({ clicked_id: id });\n   // console.error(this.state.clicked_id);\n  };\n  \n  onCheckboxBtnClick(selected) {\n    const index = this.state.cSelected.indexOf(selected);\n    if (index < 0) {\n      this.state.cSelected.push(selected);\n    } else {\n      this.state.cSelected.splice(index, 1);\n    }\n    this.setState({ cSelected: [...this.state.cSelected] });\n  }\n\n  \n  disableButton() {\n    this.setState({\n        isButtonDisabled: true\n     });\n  }\n  \n  render() {\n    var{isloaded, songsForPlaylist} = this.state;\n  \n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <h3 for=\"Playlist\">Create a Playlist</h3>\n              <Input type=\"text\" name=\"Playlist\" id=\"exampleEmail\" placeholder=\"Enter playlist name...\" />\n            </FormGroup>\n          </Col>\n        </Row>\n        \n      <table>  \n      <tbody>\n      <ListGroup>\n     \n     {songsForPlaylist.map (songs =>  (\n    \n            <ListGroupItem tag=\"button\" disabled = {this.state.isButtonDisabled} key={songs.songID} songsForPlaylist-rowid={songs.songID}\n            onClick = {this.handleClick(songs.songID)}>\n            {songs.songName}\n            <h1>{songs.songID} </h1>\n            </ListGroupItem>\n\n\t\t  ))}\n\t\t  \n\t\t  </ListGroup>\n       </tbody>\n  \t     </table>\n   \n        <br></br>\n        <h3>Songs Added</h3>\n          <li key={this.clicked_id}></li>\n        <br></br>\n        <Button id=\"createPlaylist\">Create</Button>\n      </Form>\n    );\n    \n    \n   \n\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}