{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem, ButtonGroup, Badge } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n\n    _this.onClick = function (event) {\n      var id = event.currentTarget.getAttribute(\"songForPlaylist-rowid\");\n      console.log(id);\n\n      _this.setState({\n        clicked_id: id\n      });\n    };\n\n    _this.state = {\n      clicked_id: null\n    };\n    _this.state = {\n      songsForPlaylist: [],\n      isloaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/retrievePlaylistSongs').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isloaded: true,\n          songsForPlaylist: json\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(songID) {\n      console.error(\"Link with \" + songID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          isloaded = _this$state.isloaded,\n          songsForPlaylist = _this$state.songsForPlaylist;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Create a Playlist\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"Playlist\",\n        id: \"exampleEmail\",\n        placeholder: \"Enter playlist name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })))), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, songsForPlaylist.map(function (songs) {\n        return React.createElement(\"tr\", {\n          key: songs.SongID,\n          \"songsForPlaylist-rowid\": songs.songID,\n          onClick: _this3.onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \" \") // <tr tag=\"a\" href=\"#\"key = {songs.songID} >   \n        // {songs.songName}  </tr\n        ;\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Songs Added\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Create\"));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","ListGroupItem","ButtonGroup","Badge","Example","props","onClick","event","id","currentTarget","getAttribute","console","log","setState","clicked_id","state","songsForPlaylist","isloaded","fetch","then","res","json","songID","error","map","songs","SongID","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem, ButtonGroup,  Badge } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  \n \n  constructor (props){\n    super(props);\n\n this.state = {\n      clicked_id: null\n    };\n    this.state = { \n      songsForPlaylist: [],\n      isloaded: false,\n    };\n  }\n  \n  componentDidMount(){\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/retrievePlaylistSongs')\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isloaded: true,\n        songsForPlaylist: json,\n      })\n    });\n  }\n  \n   handleClick(songID){\n    console.error(\"Link with \" + songID);\n  }\n  \n   onClick = event => {\n    const id = event.currentTarget.getAttribute(\"songForPlaylist-rowid\");\n    console.log(id);\n    this.setState({ clicked_id: id });\n  };\n  \n  \n  render() {\n    var{isloaded, songsForPlaylist} = this.state;\n  \n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <h3 for=\"Playlist\">Create a Playlist</h3>\n              <Input type=\"text\" name=\"Playlist\" id=\"exampleEmail\" placeholder=\"Enter playlist name...\" />\n            </FormGroup>\n          </Col>\n        </Row>\n        \n      <table>  \n      <tbody>\n     \n     {songsForPlaylist.map (songs =>  (\n     \n            <tr key={songs.SongID} songsForPlaylist-rowid={songs.songID} onClick={this.onClick}> </tr>\n       \n\t   // <tr tag=\"a\" href=\"#\"key = {songs.songID} >   \n\t\t  // {songs.songName}  </tr\n\t\t  ))}\n    </tbody>\n\t  </table>\n   \n        <br></br>\n        <h3>Songs Added</h3>\n          <li></li>\n        <br></br>\n        <Button id=\"createPlaylist\">Create</Button>\n      </Form>\n    );\n    \n    \n   \n\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}