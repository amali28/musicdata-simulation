{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/Search.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"handleClick\",\n    value: function handleClick(name) {// console.error( '$(e.target.value)' )\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.props.newVal(e.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"search\",\n        id: \"searchField\",\n        placeholder: \"Search for a song, album, or playlist\",\n        onChange: function onChange(e) {\n          return _this2.onChange(\"\".concat(e.target.value));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        onClick: this.handleClick,\n        id: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Search\"));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/Search.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","ListGroupItem","Example","props","state","isToggleOn","handleClick","bind","name","e","newVal","target","value","onChange","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,KAA5C,EAAmDC,KAAnD,EAA0DC,QAA1D,EAAoEC,SAApE,EAA+EC,aAA/E,QAAoG,YAApG;;IAEqBC,O;;;;;AACpB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFgB,CAIhB;;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AALgB;AAMjB;;;;gCAKYC,I,EAAK,CAChB;AAED;;;iCACcC,C,EAAG;AAChB,WAAKN,KAAL,CAAWO,MAAX,CAAkBD,CAAC,CAACE,MAAF,CAASC,KAA3B;AACD;;;6BAEQ;AAAA;;AAGP,aAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,EAAE,EAAC,aAApC;AAAkD,QAAA,WAAW,EAAC,uCAA9D;AAAsG,QAAA,QAAQ,EAAE,kBAACH,CAAD;AAAA,iBAAO,MAAI,CAACI,QAAL,WAAiBJ,CAAC,CAACE,MAAF,CAASC,KAA1B,EAAP;AAAA,SAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CADF,EASE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAG,KAAKN,WAAvB;AAAoC,QAAA,EAAE,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAFF;AAeD;;;;EAtCkCf,KAAK,CAACuB,S;;SAAtBZ,O","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem } from 'reactstrap';\n\nexport default class Example extends React.Component {\n constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  \n\n  \n   handleClick(name){\n    // console.error( '$(e.target.value)' )\n  \n  }\n    handleChange(e) {\n    this.props.newVal(e.target.value);\n  }\n \n  render() {\n    \n   \n    return (\n     \n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"Playlist\">Search</Label>\n              <Input type=\"text\" name=\"search\" id=\"searchField\" placeholder=\"Search for a song, album, or playlist\" onChange={(e) => this.onChange(`${e.target.value}`)}/>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Button onClick= {this.handleClick} id=\"search\" >Search</Button>\n      </Form>\n    \n    );\n  }\n \n \n \n  \n}\n"]},"metadata":{},"sourceType":"module"}