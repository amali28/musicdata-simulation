{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/AddSong.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem, Table, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.state = {\n      value: \"\",\n      songs: [],\n      isLoaded: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/newaddedsong').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          songs: json\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"processQuery\",\n    value: function processQuery(nameobj) {\n      var _this3 = this;\n\n      var albumID = 10;\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/addnewsong/' + nameobj.name + '/' + albumID).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this3.setState({});\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var nameobj = {\n        \"name\": this.state.value\n      };\n      console.error(nameobj.name);\n      this.processQuery(nameobj);\n      alert(\"The new song has been added to your database\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          songs = _this$state.songs;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Add a Song\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"createSong\",\n        id: \"song\",\n        placeholder: \"Enter a song name...\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        onClick: this.handleClick,\n        id: \"createSong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Create\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Recently Added Songs\")), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Song ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Song Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Album ID \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Hit Counter\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Song Name \"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, songs.map(function (result) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, result.songID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, result.songName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, result.albumID, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, result.hitCounter, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, result.songName));\n      }))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/AddSong.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","ListGroupItem","Table","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Example","props","state","value","songs","isLoaded","handleChange","bind","handleClick","fetch","then","res","json","setState","event","target","nameobj","albumID","name","console","error","processQuery","alert","map","result","songID","songName","hitCounter","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem, Table, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\n\nexport default class Example extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = \n    {\n      value: \"\",\n      songs: [],\n      isLoaded: false,\n    }\n    \n   this.handleChange= this.handleChange.bind(this);\n   this.handleClick= this.handleClick.bind(this);\n  }\n  \n   \n  componentDidMount(){\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/newaddedsong')\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isLoaded: true,\n        songs: json,\n      })\n    });\n  }\n   handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n  \n    processQuery(nameobj) {\n     \n     let albumID= 10;\n     fetch('https://se3309-final-project-amali28.c9users.io:8081/addnewsong/'+nameobj.name+'/'+albumID )\n      .then(res=> res.json())\n      .then(json => {\n      this.setState({\n      })\n    });\n   }\n   \n    handleClick(){\n      var nameobj= {\"name\": this.state.value};\n      console.error(nameobj.name);\n      this.processQuery(nameobj);\n      alert(\"The new song has been added to your database\");\n   }\n  \n  render() {\n     var{isLoaded, songs}= this.state;\n    return (\n      \n     <Form>\n      <Row form>\n              <Col md={6}>\n                <FormGroup>\n                    <h4><b>Add a Song</b></h4>\n                  <Input type=\"text\" name=\"createSong\" id=\"song\" placeholder=\"Enter a song name...\"\n                     value={this.state.value}\n                      onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Button onClick= {this.handleClick} id=\"createSong\">Create</Button>\n            <br></br>\n            <br></br>\n     <br></br><br></br>\n        <h4><b>Recently Added Songs</b></h4>\n        <Table>\n         <thead>\n          <tr>\n            <th>Song ID</th>\n            <th>Song Name</th>\n            <th>Album ID </th>\n            <th>Hit Counter</th>\n            <th>Song Name </th>\n          </tr>\n         </thead>\n        \n        <tbody>\n        {songs.map(result => (\n        <tr>\n          <td>{result.songID}</td>\n          <td>{result.songName}</td>\n          <td>{result.albumID} </td>\n          <td>{result.hitCounter} </td>\n          <td>{result.songName}</td>\n      \n        </tr>\n        ))}\n        </tbody>\n        </Table>\n     </Form>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}