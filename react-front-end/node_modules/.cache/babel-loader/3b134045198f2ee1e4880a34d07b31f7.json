{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, Table, ListGroupItem, ButtonGroup, Badge, Dropdown } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props)); //  this.toggle = this.toggle.bind(this);\n    //  this.select = this.select.bind(this);\n\n    _this.state = {\n      checked: false,\n      clicked_id: [],\n      songsForPlaylist: [],\n      isloaded: false,\n      playlistsToBeAdded: [],\n      allPlaylist: [],\n      songIDs: [],\n      newPlaylist: \"\",\n      currentplaylist: 1,\n      addedsong: 1,\n      songIDHits: 1\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickNew = _this.handleClickNew.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickAddSong = _this.handleClickAddSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickHitCounter = _this.handleClickHitCounter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangecurrent = _this.handleChangecurrent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangesongID = _this.handleChangesongID.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeHitCounter = _this.handleChangeHitCounter.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.toggle = this.toggle.bind(this);\n\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        newPlaylist: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangecurrent\",\n    value: function handleChangecurrent(event) {\n      this.setState({\n        currentplaylist: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangesongID\",\n    value: function handleChangesongID(event) {\n      this.setState({\n        addedsong: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeHitCounter\",\n    value: function handleChangeHitCounter(event) {\n      this.setState({\n        songIDHits: event.target.value\n      });\n    }\n  }, {\n    key: \"getAllplaylists\",\n    value: function getAllplaylists() {\n      var _this2 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/userplaylists/12345').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isloaded: true,\n          allPlaylist: json\n        });\n      });\n    }\n  }, {\n    key: \"addnewPlaylist\",\n    value: function addnewPlaylist(nameobj) {\n      var _this3 = this;\n\n      var user = 12345;\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/playlist/' + user + '/' + nameobj.name).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this3.setState({});\n      });\n    }\n  }, {\n    key: \"addsongtoPlaylist\",\n    value: function addsongtoPlaylist(currentPlaylistObject) {\n      var _this4 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/addsong/' + currentPlaylistObject.songID + '/' + currentPlaylistObject.playlistID).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this4.setState({});\n      });\n    }\n  }, {\n    key: \"increaseHitCounter\",\n    value: function increaseHitCounter(songIDObj) {\n      var _this5 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/play/' + songIDObj.songID).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this5.setState({});\n      });\n    }\n  }, {\n    key: \"handleClickAddSong\",\n    value: function handleClickAddSong() {\n      var currentPlaylistObject = {\n        \"playlistID\": this.state.currentplaylist,\n        \"songID\": this.state.addedsong\n      };\n      this.addsongtoPlaylist(currentPlaylistObject);\n      alert(\"the song with ID \" + currentPlaylistObject.songID + \" is added to \" + currentPlaylistObject.playlistID);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.getAllplaylists();\n    }\n  }, {\n    key: \"handleClickNew\",\n    value: function handleClickNew() {\n      var nameobj = {\n        \"name\": this.state.newPlaylist\n      };\n      this.addnewPlaylist(nameobj);\n      this.getAllplaylists();\n      console.error(nameobj);\n    }\n  }, {\n    key: \"handleClickHitCounter\",\n    value: function handleClickHitCounter() {\n      var songIDObj = {\n        \"songID\": this.state.songIDHits\n      };\n      this.increaseHitCounter(songIDObj);\n      console.error(songIDObj);\n    }\n  }, {\n    key: \"compomentDidMount\",\n    value: function compomentDidMount() {\n      var _this6 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/newaddedsong/').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this6.setState({\n          isloaded: true,\n          songsID: json\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$state = this.state,\n          isloaded = _this$state.isloaded,\n          allPlaylist = _this$state.allPlaylist;\n      var _this$state2 = this.state,\n          isloaded = _this$state2.isloaded,\n          songsID = _this$state2.songsID;\n      return React.createElement(Form, {\n        class: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Create a Playlist\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"Playlist\",\n        id: \"exampleEmail\",\n        placeholder: \"Enter playlist Name...\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClickNew,\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Add New Playlist\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Select Album\"), React.createElement(\"span\", {\n        onClick: this.toggle,\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": this.state.dropdownOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.albumValue), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, albums.map(function (result) {\n        return React.createElement(\"div\", {\n          onClick: _this7.select,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, result.albumID);\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"currentPlaylist\",\n        placeholder: \"Enter playlist ID\",\n        value: this.state.value,\n        onChange: this.handleChangecurrent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"songID\",\n        placeholder: \"Enter songID \",\n        value: this.state.value,\n        onChange: this.handleChangesongID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClickAddSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Add song to playlist\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClick,\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Get All playlists\"), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Date Created\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"User ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Playlist Name\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, allPlaylist.map(function (result) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, result.playlistID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, result.dataCreated, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, result.userID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, result.playlistName));\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Playing a song will increase the hitCounter\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"currentPlaylist\",\n        placeholder: \"Enter playlist ID\",\n        value: this.state.value,\n        onChange: this.handleChangeHitCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClickHitCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Play To Increase Hits\")));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","Table","ListGroupItem","ButtonGroup","Badge","Dropdown","Example","props","state","checked","clicked_id","songsForPlaylist","isloaded","playlistsToBeAdded","allPlaylist","songIDs","newPlaylist","currentplaylist","addedsong","songIDHits","handleClick","bind","handleClickNew","handleClickAddSong","handleClickHitCounter","handleChange","handleChangecurrent","handleChangesongID","handleChangeHitCounter","event","setState","target","value","fetch","then","res","json","nameobj","user","name","currentPlaylistObject","songID","playlistID","songIDObj","addsongtoPlaylist","alert","getAllplaylists","addnewPlaylist","console","error","increaseHitCounter","songsID","dropdownOpen","toggle","albumValue","albums","map","result","select","albumID","dataCreated","userID","playlistName","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,KAA5C,EAAmDC,KAAnD,EAA0DC,QAA1D,EAAoEC,SAApE,EAA+EC,KAA/E,EAAsFC,aAAtF,EAAqGC,WAArG,EAAmHC,KAAnH,EAA0HC,QAA1H,QAA0I,YAA1I;;IAEqBC,O;;;;;AAGnB,mBAAaC,KAAb,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN,GADiB,CAGnB;AACA;;AAEE,UAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,gBAAgB,EAAE,EAHT;AAITC,MAAAA,QAAQ,EAAE,KAJD;AAKTC,MAAAA,kBAAkB,EAAE,EALX;AAMTC,MAAAA,WAAW,EAAC,EANH;AAOTC,MAAAA,OAAO,EAAE,EAPA;AAQTC,MAAAA,WAAW,EAAE,EARJ;AASTC,MAAAA,eAAe,EAAC,CATP;AAUTC,MAAAA,SAAS,EAAC,CAVD;AAWTC,MAAAA,UAAU,EAAC;AAXF,KAAX;AAcA,UAAKC,WAAL,GAAkB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAlB;AACA,UAAKC,cAAL,GAAqB,MAAKA,cAAL,CAAoBD,IAApB,uDAArB;AACA,UAAKE,kBAAL,GAAwB,MAAKA,kBAAL,CAAwBF,IAAxB,uDAAxB;AACA,UAAKG,qBAAL,GAA4B,MAAKA,qBAAL,CAA2BH,IAA3B,uDAA5B;AACA,UAAKI,YAAL,GAAmB,MAAKA,YAAL,CAAkBJ,IAAlB,uDAAnB;AACA,UAAKK,mBAAL,GAA0B,MAAKA,mBAAL,CAAyBL,IAAzB,uDAA1B;AACA,UAAKM,kBAAL,GAAwB,MAAKA,kBAAL,CAAwBN,IAAxB,uDAAxB;AACA,UAAKO,sBAAL,GAA6B,MAAKA,sBAAL,CAA4BP,IAA5B,uDAA7B,CA3BiB,CA4BlB;;AA5BkB;AA6BlB;;;;iCAGYQ,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACd,QAAAA,WAAW,EAAEa,KAAK,CAACE,MAAN,CAAaC;AAA3B,OAAd;AACC;;;wCACiBH,K,EAAO;AACzB,WAAKC,QAAL,CAAc;AAACb,QAAAA,eAAe,EAAEY,KAAK,CAACE,MAAN,CAAaC;AAA/B,OAAd;AACC;;;uCACgBH,K,EAAO;AACxB,WAAKC,QAAL,CAAc;AAACZ,QAAAA,SAAS,EAAEW,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACC;;;2CACoBH,K,EAAO;AAC5B,WAAKC,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAA1B,OAAd;AACC;;;sCAEc;AAAA;;AACfC,MAAAA,KAAK,CAAC,0EAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAGA,GAAG,CAACC,IAAJ,EAAH;AAAA,OADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACf,QAAA,MAAI,CAACN,QAAL,CAAc;AACTlB,UAAAA,QAAQ,EAAE,IADD;AAETE,UAAAA,WAAW,EAAEsB;AAFJ,SAAd;AAIE,OAPD;AAQD;;;mCAEeC,O,EAAQ;AAAA;;AACrB,UAAIC,IAAI,GAAC,KAAT;AACDL,MAAAA,KAAK,CAAC,mEAAiEK,IAAjE,GAAuE,GAAvE,GAA2ED,OAAO,CAACE,IAApF,CAAL,CACCL,IADD,CACM,UAAAC,GAAG;AAAA,eAAGA,GAAG,CAACC,IAAJ,EAAH;AAAA,OADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACf,QAAA,MAAI,CAACN,QAAL,CAAc,EAAd;AACE,OAJD;AAKD;;;sCAEiBU,qB,EAAsB;AAAA;;AAEtCP,MAAAA,KAAK,CAAC,kEAAgEO,qBAAqB,CAACC,MAAtF,GAA8F,GAA9F,GACSD,qBAAqB,CAACE,UADhC,CAAL,CAECR,IAFD,CAEM,UAAAC,GAAG;AAAA,eAAGA,GAAG,CAACC,IAAJ,EAAH;AAAA,OAFT,EAGCF,IAHD,CAGM,UAAAE,IAAI,EAAI;AACf,QAAA,MAAI,CAACN,QAAL,CAAc,EAAd;AACE,OALD;AAMD;;;uCAEkBa,S,EAAU;AAAA;;AAC3BV,MAAAA,KAAK,CAAC,+DAA6DU,SAAS,CAACF,MAAxE,CAAL,CACCP,IADD,CACM,UAAAC,GAAG;AAAA,eAAGA,GAAG,CAACC,IAAJ,EAAH;AAAA,OADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACf,QAAA,MAAI,CAACN,QAAL,CAAc,EAAd;AACE,OAJD;AAKD;;;yCAGmB;AACpB,UAAIU,qBAAqB,GAAE;AAAC,sBAAc,KAAKhC,KAAL,CAAWS,eAA1B;AACG,kBAAU,KAAKT,KAAL,CAAWU;AADxB,OAA3B;AAGE,WAAK0B,iBAAL,CAAuBJ,qBAAvB;AACAK,MAAAA,KAAK,CAAC,sBAAqBL,qBAAqB,CAACC,MAA3C,GAAmD,eAAnD,GAAoED,qBAAqB,CAACE,UAA3F,CAAL;AACD;;;kCAEY;AACX,WAAKI,eAAL;AACD;;;qCAEe;AACd,UAAIT,OAAO,GAAE;AAAC,gBAAQ,KAAK7B,KAAL,CAAWQ;AAApB,OAAb;AACA,WAAK+B,cAAL,CAAoBV,OAApB;AACA,WAAKS,eAAL;AACDE,MAAAA,OAAO,CAACC,KAAR,CAAcZ,OAAd;AACA;;;4CAEsB;AACrB,UAAIM,SAAS,GAAE;AAAC,kBAAU,KAAKnC,KAAL,CAAWW;AAAtB,OAAf;AACA,WAAK+B,kBAAL,CAAwBP,SAAxB;AACDK,MAAAA,OAAO,CAACC,KAAR,CAAcN,SAAd;AACA;;;wCAIkB;AAAA;;AAChBV,MAAAA,KAAK,CAAC,oEAAD,CAAL,CACAC,IADA,CACK,UAAAC,GAAG;AAAA,eAAGA,GAAG,CAACC,IAAJ,EAAH;AAAA,OADR,EAEAF,IAFA,CAEK,UAAAE,IAAI,EAAI;AACf,QAAA,MAAI,CAACN,QAAL,CAAc;AACTlB,UAAAA,QAAQ,EAAE,IADD;AAETuC,UAAAA,OAAO,EAAEf;AAFA,SAAd;AAIE,OAPA;AAQF;;;iCAEYP,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACE,QAAAA,KAAK,EAAEH,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACD;;;6BAEQ;AAAA;;AAAA,wBAEqB,KAAKxB,KAF1B;AAAA,UAEHI,QAFG,eAEHA,QAFG;AAAA,UAEOE,WAFP,eAEOA,WAFP;AAAA,yBAGiB,KAAKN,KAHtB;AAAA,UAGHI,QAHG,gBAGHA,QAHG;AAAA,UAGOuC,OAHP,gBAGOA,OAHP;AAKP,aAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,GAAG,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,EAAE,EAAC,cAAtC;AAAqD,QAAA,WAAW,EAAC,wBAAjE;AACG,QAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWwB,KADrB;AAEI,QAAA,QAAQ,EAAE,KAAKP,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,oBAAC,MAAD;AAAS,QAAA,OAAO,EAAG,KAAKH,cAAxB;AAAwC,QAAA,EAAE,EAAC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAUA,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKd,KAAL,CAAW4C,YAA7B;AAA2C,QAAA,MAAM,EAAE,KAAKC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADI,EAKJ;AACE,QAAA,OAAO,EAAI,KAAKA,MADlB;AAEE,uBAAY,UAFd;AAGE,yBAAc,MAHhB;AAIE,yBAAe,KAAK7C,KAAL,CAAW4C,YAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,KAAK5C,KAAL,CAAW8C,UALb,CALI,EAYJ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCC,MAAM,CAACC,GAAP,CAAW,UAAAC,MAAM;AAAA,eAClB;AAAK,UAAA,OAAO,EAAE,MAAI,CAACC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BD,MAAM,CAACE,OAAnC,CADkB;AAAA,OAAjB,CADD,CAZI,CAVA,EAkCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,iBAAxB;AAA0C,QAAA,WAAW,EAAC,mBAAtD;AACM,QAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWwB,KADxB;AAEO,QAAA,QAAQ,EAAE,KAAKN,mBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,EAIM,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,WAAW,EAAC,eAA7C;AACU,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWwB,KAD5B;AAEW,QAAA,QAAQ,EAAE,KAAKL,kBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJN,EAQQ,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAG,KAAKJ,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCARR,CAlCN,CADF,CADF,CADF,EAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApDF,EAqDE,oBAAC,MAAD;AAAS,QAAA,OAAO,EAAG,KAAKH,WAAxB;AAAsC,QAAA,EAAE,EAAC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BArDF,EAyDA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCN,WAAW,CAAC0C,GAAZ,CAAgB,UAAAC,MAAM;AAAA,eACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,MAAM,CAACf,UAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKe,MAAM,CAACG,WAAZ,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,MAAM,CAACI,MAAZ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,MAAM,CAACK,YAAZ,CAJF,CADuB;AAAA,OAAtB,CADD,CATF,CAzDA,EA6EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7EJ,EA+EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDA/EJ,EAiFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,iBAAxB;AAA0C,QAAA,WAAW,EAAC,mBAAtD;AACU,QAAA,KAAK,EAAE,KAAKtD,KAAL,CAAWwB,KAD5B;AAEW,QAAA,QAAQ,EAAE,KAAKJ,sBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADP,EAIW,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAG,KAAKJ,qBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJX,CAjFP,CAFF;AAiGD;;;;EAvOkCjC,KAAK,CAACwE,S;;SAAtBzD,O","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, Table, ListGroupItem, ButtonGroup,  Badge, Dropdown } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  \n \n  constructor (props){\n    super(props);\n    \n  //  this.toggle = this.toggle.bind(this);\n  //  this.select = this.select.bind(this);\n\n    this.state={\n      checked: false,\n      clicked_id: [],\n      songsForPlaylist: [],\n      isloaded: false,\n      playlistsToBeAdded: [],\n      allPlaylist:[],\n      songIDs: [],\n      newPlaylist: \"\",\n      currentplaylist:1,\n      addedsong:1,\n      songIDHits:1,\n    };\n    \n    this.handleClick= this.handleClick.bind(this);\n    this.handleClickNew= this.handleClickNew.bind(this);\n    this.handleClickAddSong=this.handleClickAddSong.bind(this);\n    this.handleClickHitCounter= this.handleClickHitCounter.bind(this);\n    this.handleChange= this.handleChange.bind(this);\n    this.handleChangecurrent= this.handleChangecurrent.bind(this);\n    this.handleChangesongID=this.handleChangesongID.bind(this);\n    this.handleChangeHitCounter= this.handleChangeHitCounter.bind(this);\n   // this.toggle = this.toggle.bind(this);\n  }\n\n  \n  handleChange(event) {\n    this.setState({newPlaylist: event.target.value});\n    }\n  handleChangecurrent(event) {\n    this.setState({currentplaylist: event.target.value});\n    }  \n  handleChangesongID(event) {\n    this.setState({addedsong: event.target.value});\n    } \n  handleChangeHitCounter(event) {\n    this.setState({songIDHits: event.target.value});\n    } \n \n  getAllplaylists(){\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/userplaylists/12345')\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isloaded: true,\n        allPlaylist: json,\n      })\n    });\n  }\n  \n   addnewPlaylist(nameobj){\n     let user=12345;\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/playlist/'+user +'/'+nameobj.name)\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({})\n    });\n  }\n  \n  addsongtoPlaylist(currentPlaylistObject){\n     \n    fetch('https://se3309-final-project-amali28.c9users.io:8081/addsong/'+currentPlaylistObject.songID +'/'\n                  +currentPlaylistObject.playlistID)\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({})\n    });\n  }\n  \n  increaseHitCounter(songIDObj){\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/play/'+songIDObj.songID)\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({})\n    });\n  }\n  \n  \n  handleClickAddSong(){\n  var currentPlaylistObject= {\"playlistID\": this.state.currentplaylist,\n                                \"songID\": this.state.addedsong\n  };\n    this.addsongtoPlaylist(currentPlaylistObject);\n    alert(\"the song with ID \"+ currentPlaylistObject.songID+ \" is added to \"+ currentPlaylistObject.playlistID );\n  }\n\n  handleClick(){\n    this.getAllplaylists()\n  }\n  \n  handleClickNew(){\n    var nameobj= {\"name\": this.state.newPlaylist};\n    this.addnewPlaylist(nameobj);\n    this.getAllplaylists();\n   console.error(nameobj);\n  }\n  \n  handleClickHitCounter(){\n    var songIDObj= {\"songID\": this.state.songIDHits};\n    this.increaseHitCounter(songIDObj);\n   console.error(songIDObj);\n  }\n  \n  \n  \n  compomentDidMount(){\n     fetch('https://se3309-final-project-amali28.c9users.io:8081/newaddedsong/')\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isloaded: true,\n        songsID: json,\n      })\n    });\n  }\n  \n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n  \n  render() {\n   \n    var{isloaded, allPlaylist}= this.state;\n    var{isloaded, songsID}= this.state;\n  \n    return (\n          \n      <Form class=\"2\">\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <h3 for=\"Playlist\">Create a Playlist</h3>\n              <Input type=\"text\" name=\"Playlist\" id=\"exampleEmail\" placeholder=\"Enter playlist Name...\" \n                 value={this.state.value}\n                  onChange={this.handleChange}/>\n              <Button  onClick= {this.handleClickNew} id=\"createPlaylist\">Add New Playlist</Button>\n              <br></br>\n              <hr></hr> \n              \n              \n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>\n          Select Album\n        </DropdownToggle>\n      \n        <span\n          onClick = {this.toggle}\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded={this.state.dropdownOpen}\n        >{this.state.albumValue}\n        </span>\n        <DropdownMenu>\n        {albums.map(result => (\n        <div onClick={this.select}>{result.albumID}</div>\n        ))}\n\n        </DropdownMenu>\n        \n      </Dropdown>\n              \n              \n              \n      \n                  <div>\n                        <Input type=\"text\" name=\"currentPlaylist\" placeholder=\"Enter playlist ID\"\n                              value={this.state.value}\n                               onChange={this.handleChangecurrent}/>\n                        <Input type=\"text\" name=\"songID\" placeholder=\"Enter songID \"\n                                  value={this.state.value}\n                                   onChange={this.handleChangesongID}/>\n                                \n                          <Button onClick= {this.handleClickAddSong} >Add song to playlist</Button>\n                  </div>\n\n            </FormGroup>\n          </Col>\n        </Row>\n         \n        <br></br>\n        <Button  onClick= {this.handleClick}  id=\"createPlaylist\">Get All playlists</Button>\n      \n          \n          \n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Date Created</th>\n            <th>User ID</th>\n            <th>Playlist Name</th>\n          </tr>\n        </thead>\n        <tbody>\n        {allPlaylist.map(result => (\n        <tr>\n          <td>{result.playlistID}</td>\n          <td>{result.dataCreated} </td>\n          <td>{result.userID}</td>\n          <td>{result.playlistName}</td>\n        </tr>\n        ))}\n        </tbody>\n        </Table>\n          <hr></hr>\n          \n          <h4>Playing a song will increase the hitCounter</h4>\n          \n             <div>\n                    <Input type=\"text\" name=\"currentPlaylist\" placeholder=\"Enter playlist ID\"\n                              value={this.state.value}\n                               onChange={this.handleChangeHitCounter}/>\n                        <Button onClick= {this.handleClickHitCounter} >Play To Increase Hits</Button>        \n             </div>                 \n                               \n  </Form>\n  \n    );\n    \n    \n   \n\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}