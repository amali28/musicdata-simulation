{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem, ButtonGroup, Badge } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.state = {\n      songsForPlaylist: [],\n      isloaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/retrievePlaylistSongs').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isloaded: true,\n          songsForPlaylist: json\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(songID) {\n      console.error(\"Link with \" + songID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          isloaded = _this$state.isloaded,\n          songsForPlaylist = _this$state.songsForPlaylist;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Create a Playlist\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"Playlist\",\n        id: \"exampleEmail\",\n        placeholder: \"Enter playlist name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })))), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, songsForPlaylist.map(function (songs) {\n        return React.createElement(ListGroupItem, {\n          tag: \"a\",\n          href: \"#\",\n          key: songs.songID,\n          onClick: _this3.handleClick(+_this3.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, songs.songName, _this3.key);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Songs Added\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Create\"));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/createPlaylistForm.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","ListGroupItem","ButtonGroup","Badge","Example","props","state","songsForPlaylist","isloaded","fetch","then","res","json","setState","songID","console","error","map","songs","handleClick","key","songName","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,KAA5C,EAAmDC,KAAnD,EAA0DC,QAA1D,EAAoEC,SAApE,EAA+EC,aAA/E,EAA8FC,WAA9F,EAA4GC,KAA5G,QAAyH,YAAzH;;IAEqBC,O;;;;;AAGnB,mBAAaC,KAAb,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,EADP;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAHiB;AAOlB;;;;wCAEkB;AAAA;;AACjBC,MAAAA,KAAK,CAAC,4EAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAGA,GAAG,CAACC,IAAJ,EAAH;AAAA,OADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACf,QAAA,MAAI,CAACC,QAAL,CAAc;AACTL,UAAAA,QAAQ,EAAE,IADD;AAETD,UAAAA,gBAAgB,EAAEK;AAFT,SAAd;AAIE,OAPD;AAQD;;;gCAEYE,M,EAAO;AAClBC,MAAAA,OAAO,CAACC,KAAR,CAAc,eAAeF,MAA7B;AACD;;;6BAGQ;AAAA;;AAAA,wBAC2B,KAAKR,KADhC;AAAA,UACHE,QADG,eACHA,QADG;AAAA,UACOD,gBADP,eACOA,gBADP;AAGP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,GAAG,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,EAAE,EAAC,cAAtC;AAAqD,QAAA,WAAW,EAAC,wBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CADF,EASA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACAA,gBAAgB,CAACU,GAAjB,CAAsB,UAAAC,KAAK;AAAA,eAC5B,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAC,GAAnB;AAAuB,UAAA,IAAI,EAAC,GAA5B;AAAkC,UAAA,GAAG,EAAIA,KAAK,CAACJ,MAA/C;AAAuD,UAAA,OAAO,EAAE,MAAI,CAACK,WAAL,CAAiB,CAAE,MAAI,CAACC,GAAxB,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACAF,KAAK,CAACG,QADN,EAEA,MAAI,CAACD,GAFL,CAD4B;AAAA,OAA3B,CADA,CATA,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAlBF,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAqBE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,CADF;AAyBD;;;;EAxDkC7B,KAAK,CAAC+B,S;;SAAtBlB,O","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, ListGroupItem, ButtonGroup,  Badge } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  \n \n  constructor (props){\n    super(props);\n\n    this.state = { \n      songsForPlaylist: [],\n      isloaded: false,\n    };\n  }\n  \n  componentDidMount(){\n    fetch('https://se3309-final-project-amali28.c9users.io:8081/retrievePlaylistSongs')\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isloaded: true,\n        songsForPlaylist: json,\n      })\n    });\n  }\n  \n   handleClick(songID){\n    console.error(\"Link with \" + songID);\n  }\n  \n  \n  render() {\n    var{isloaded, songsForPlaylist} = this.state;\n  \n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <h3 for=\"Playlist\">Create a Playlist</h3>\n              <Input type=\"text\" name=\"Playlist\" id=\"exampleEmail\" placeholder=\"Enter playlist name...\" />\n            </FormGroup>\n          </Col>\n        </Row>\n      <ListGroup>      \n     {songsForPlaylist.map (songs =>  (\n\t    <ListGroupItem tag=\"a\" href=\"#\"   key = {songs.songID} onClick={this.handleClick(+ this.key)}> \n\t\t  {songs.songName}\n\t\t  {this.key}\n\t  </ListGroupItem>\n    ))}\n      </ListGroup>\n        <br></br>\n        <h3>Songs Added</h3>\n          <li></li>\n        <br></br>\n        <Button id=\"createPlaylist\">Create</Button>\n      </Form>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}