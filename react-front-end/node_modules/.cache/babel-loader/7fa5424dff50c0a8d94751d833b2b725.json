{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/react-front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/react-front-end/src/PlaylistSongs.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, Table, ListGroupItem, ButtonGroup, Badge, Dropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.state = {\n      playlistID: 152,\n      allSongs: [],\n      isloaded: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        playlistID: event.target.value\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var playlistIDObj = {\n        \"playlistID\": this.state.playlistID\n      };\n      this.getAllSongs(playlistIDObj);\n    }\n  }, {\n    key: \"getAllSongs\",\n    value: function getAllSongs(playlistIDObj) {\n      var _this2 = this;\n\n      fetch('https://se3309-final-project-amali28.c9users.io:8081/playlistsongs/' + playlistIDObj.playlistID, {\n        mode: 'no-cors'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isloaded: true,\n          allSongs: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isloaded = _this$state.isloaded,\n          allSongs = _this$state.allSongs;\n      return React.createElement(Form, {\n        class: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Retrieve playlist songs\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"Playlist\",\n        placeholder: \"Enter playlist ID ...\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClick,\n        id: \"createPlaylist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Add New Playlist\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        for: \"Playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Retrieve All Songs\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Song #\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Album #\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Hit Counter\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Song Name\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.allSongs.map(function (result) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, result.songsID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, result.albumID, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, result.hitCounter), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, result.songName));\n      }))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/ubuntu/workspace/react-front-end/src/PlaylistSongs.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ListGroup","Table","ListGroupItem","ButtonGroup","Badge","Dropdown","DropdownToggle","DropdownMenu","Example","props","state","playlistID","allSongs","isloaded","handleChange","bind","handleClick","event","setState","target","value","playlistIDObj","getAllSongs","fetch","mode","then","res","json","map","result","songsID","albumID","hitCounter","songName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, ListGroup, Table, ListGroupItem, ButtonGroup,  Badge, Dropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\n\nexport default class Example extends React.Component {\n    \n     constructor (props){\n    super(props);\n        \n        this.state=\n        {\n          playlistID:152,\n          allSongs:[],\n          isloaded: false,\n        };\n        this.handleChange=this.handleChange.bind(this);\n        this.handleClick= this.handleClick.bind(this);\n     }\n  \n     handleChange(event) {\n        this.setState({playlistID: event.target.value});\n} \n    handleClick(){\n        var playlistIDObj= {\"playlistID\": this.state.playlistID};\n          this.getAllSongs(playlistIDObj);\n}\n    getAllSongs(playlistIDObj){\n        \n    fetch('https://se3309-final-project-amali28.c9users.io:8081/playlistsongs/'+playlistIDObj.playlistID, {mode:'no-cors'})\n    .then(res=> res.json())\n    .then(json => {\n   this.setState({\n        isloaded: true,\n        allSongs: json,\n      })\n    });\n  }\n    \n    \n    \n     render() {\n         \n             var{isloaded, allSongs}= this.state;\n\n         \n    return (\n        <Form class=\"2\">\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <h3 for=\"Playlist\">Retrieve playlist songs</h3>\n              <Input type=\"text\" name=\"Playlist\"  placeholder=\"Enter playlist ID ...\" \n                 value={this.state.value}\n                  onChange={this.handleChange}/>\n                <br></br>\n              <Button  onClick= {this.handleClick} id=\"createPlaylist\">Add New Playlist</Button>\n              <br></br>\n              <hr></hr> \n            </FormGroup>\n          </Col>\n        </Row>\n         \n        <br></br>\n          <h3 for=\"Playlist\">Retrieve All Songs</h3>\n        <br></br>\n        <br></br>\n      \n      <Table>\n        <thead>\n          <tr>\n            <th>Song #</th>\n            <th>Album #</th>\n            <th>Hit Counter</th>\n            <th>Song Name</th>\n          </tr>\n        </thead>\n        <tbody>\n        {this.allSongs.map(result => (\n        <tr>\n          <td>{result.songsID}</td>\n          <td>{result.albumID} </td>\n          <td>{result.hitCounter}</td>\n          <td>{result.songName}</td>\n        </tr>\n        ))}\n        </tbody>\n        </Table>\n  </Form>\n  \n        );\n     }\n}"]},"metadata":{},"sourceType":"module"}